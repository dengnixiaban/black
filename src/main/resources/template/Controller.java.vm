package ${package.Controller};
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import org.springframework.beans.factory.annotation.Autowired;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.web.bind.annotation.*;
import io.swagger.annotations.*;
import springfox.documentation.annotations.ApiIgnore;
import com.baomidou.mybatisplus.toolkit.CollectionUtils;
import com.dingxin.dormitorymanage.common.BaseResult;

/**
* ${table.comment}
*/
@RestController
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/${table.entityPath}")
#if(${superControllerClass})
@Api(value = "${table.comment}接口")
public class ${table.controllerName} extends ${superControllerClass} {
#else
@Api(value = "${table.comment}接口")
public class ${table.controllerName} {
#end

#foreach($field in ${table.fields})
    #if(${field.keyFlag})
        #set($keyPropertyName=${field.propertyName})
        #set($keyPropertyAttr=${field.propertyType})
    #end
#end

#set ($servicePropertyName = $table.serviceName.substring(0,1).toLowerCase() + $table.serviceName.substring(1,$table.serviceName.length()))
#set ($classname = $entity.substring(0,1).toLowerCase() + $entity.substring(1,$entity.length()))
    @Autowired
    private ${table.serviceName} ${servicePropertyName};

    @Autowired
    private MessageSource messageSource;

    /**
     * 列表
     */
    @GetMapping
    //@RequiresPermissions("#if(${package.ModuleName})#end${table.entityPath}:list" )
    @ApiOperation(value = "获取${table.comment}列表" )
    public BaseResult<Page<${entity}>>  list(BaseQuery baseQuery){
        BaseResult<Page<${entity}>> baseResult = new BaseResult<>();
        //查询列表数据
        Page page=new Page(baseQuery.getCurrentPage(),baseQuery.getPageSize());
        Page pageList=${servicePropertyName}.selectPage(page,new EntityWrapper<${entity}>());
        if (CollectionUtils.isEmpty(pageList.getRecords())) {
            return baseResult.notFound();
        }
        baseResult.setData(pageList);
        return baseResult;
    }

    /**
     * 信息
     */
    @GetMapping("/{${keyPropertyName}}" )
    //@RequiresPermissions("#if(${package.ModuleName})#end${table.entityPath}:info" )
    @ApiOperation(value = "获取${table.comment}详情信息" )
    public BaseResult<${entity}> info(@PathVariable("${keyPropertyName}" ) ${keyPropertyAttr} ${keyPropertyName}){
        BaseResult<${entity}> baseResult = new BaseResult<>();

        ${entity} ${classname} = ${servicePropertyName}.selectById(${keyPropertyName});
        if (${classname} == null) {
            return baseResult.notFound();
        }
        baseResult.setData(${classname});
        return baseResult;
    }

    /**
     * 保存
     */
    @PostMapping
    //@RequiresPermissions("#if(${package.ModuleName})#end${table.entityPath}:save" )
    @ApiOperation(value = "新增${table.comment}信息" )
    public BaseResult save(@RequestBody  ${entity} ${classname}){

        BaseResult<${entity}> baseResult = new BaseResult<>();

        boolean retFlag = ${servicePropertyName}.insert(${classname});
        if (!retFlag) {
            return baseResult.failed(messageSource.getMessage("10001", null, Locale.CHINESE));
        }
        baseResult.setData(${classname});
        return baseResult;
    }

    /**
     * 修改
     */
    @PutMapping
    //@RequiresPermissions("#if(${package.ModuleName})#end${table.entityPath}:update" )
    @ApiOperation(value = "修改${table.comment}信息" )
    public BaseResult update(@RequestBody @PathVariable("${classname}" ) ${entity} ${classname}){
        BaseResult<${entity}> baseResult = new BaseResult<>();

        boolean retFlag = ${servicePropertyName}.updateById(${classname});
        if (!retFlag) {
            return baseResult.failed(messageSource.getMessage("10001", null, Locale.CHINESE));
        }
        baseResult.setData(${classname});
        return baseResult;
    }

    /**
     * 删除
     */
    @DeleteMapping("/{${keyPropertyName}}" )
    //@RequiresPermissions("#if(${package.ModuleName})#end${table.entityPath}:delete" )
    @ApiOperation(value = "删除${table.comment}信息" )
    public BaseResult delete(@PathVariable("${keyPropertyName}" ) ${keyPropertyAttr} ${keyPropertyName}){
        BaseResult<${entity}> baseResult = new BaseResult<>();
        boolean retFlag = ${servicePropertyName}.deleteById(${keyPropertyName});
        if (!retFlag) {
            return baseResult.failed(messageSource.getMessage("10001", null, Locale.CHINESE));
        }
        return baseResult;
    }
}
